[tool.poetry]
name = "Drinquepedia"
version = "1.0.0"
description = ""
authors = ["Beto Figueiredo"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12.2"
pydantic = { extras = ["email"], version = "^2.6.4" }
alembic = "^1.13.1"
python-dotenv = "^1.0.1"
mysqlclient = "^2.2.4"
pymysql = "^1.1.0"
pendulum = "^3.0.0"
fastapi = "^0.110.0"
sqlalchemy = "^2.0.29"
uvicorn = { extras = ["standard"], version = "^0.29.0" }
gunicorn = "^22.0.0"
databases = { extras = ["asyncmy"], version = "^0.9.0" }
pandas = "^2.2.1"
cryptography = "^42.0.5"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-asyncio = "^0.23.6"
taskipy = "^1.12.2"
pylint = "^3.1.0"
ruff = "^0.3.4"
mypy = "^1.9.0"
sqlalchemy = { extras = ["mypy"], version = "^2.0.29" }


[tool.mypy]
# mypy_path = "src"
exclude = "src/migrations"
ignore_missing_imports = true
show_error_codes = true
show_column_numbers = true
pretty = true
# show_traceback = true
# check_untyped_defs = true
# incremental = false
strict = true
warn_return_any = false
warn_redundant_casts = true
warn_unreachable = true
# warn_unused_configs = true
# warn_unused_ignores = true
disallow_subclassing_any = false
# disallow_any_explicit = true
disallow_untyped_calls = true
disallow_untyped_defs = true
# disallow_incomplete_defs = true
plugins = ["pydantic.mypy"]

[tool.ruff]
ignore-init-module-imports = true
indent-width = 4

[tool.pytest.ini_options]
pythonpath = "src"

[tool.taskipy.tasks]
mypy = { cmd = "mypy src", help = "runs mypy" }
test = { cmd = "python3 -m pytest -vv", help = "runs all unit tests" }
test_docker = { cmd = "docker compose exec drinquepedia_api python -m pytest -vv", help = "runs all unit tests inside docker" }
create_migration = { cmd = "alembic revision --autogenerate -m", help = "create new migration" }
run_migrations = { cmd = "alembic upgrade head", help = "run migrations" }
create_migration_docker = { cmd = "docker compose exec drinquepedia_api alembic revision --autogenerate -m", help = "create new migration" }
run_migrations_docker = { cmd = "docker compose exec drinquepedia_api alembic upgrade head", help = "run migrations" }
undo_last_migration = { cmd = "docker compose exec drinquepedia_api alembic downgrade -1", help = "undo last migration" }
start_vps = { cmd = "systemctl --user start gunicorn", help = "start vps server" }
restart_vps = { cmd = "systemctl --user restart gunicorn", help = "restart vps server" }
stop_vps = { cmd = "systemctl --user stop gunicorn", help = "stop vps server" }
status_vps = { cmd = "systemctl --user status gunicorn", help = "status of gunicorn on vps server" }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
