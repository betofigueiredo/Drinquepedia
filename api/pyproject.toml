[tool.poetry]
name = "Drinquepedia"
version = "1.0.0"
description = ""
authors = ["Beto Figueiredo"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12.2"
alembic = "^1.13.1"
flask = "^3.0.2"
flask-cors = "^4.0.0"
flask-restful = "^0.3.10"
flask-sqlalchemy = "^3.1.1"
pydantic = { extras = ["email"], version = "^2.6.3" }
pendulum = "^3.0.0"
python-dotenv = "^1.0.1"
mysqlclient = "^2.2.4"
pymysql = "^1.1.0"
flask-marshmallow = "^1.2.0"
marshmallow-sqlalchemy = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.2"
taskipy = "^1.12.2"
pylint = "^3.1.0"
ruff = "^0.3.1"
mypy = "^1.8.0"

[tool.mypy]
# mypy_path = "src"
# exclude =
ignore_missing_imports = true
# show_error_codes = true
# show_column_numbers = true
# pretty = true
# show_traceback = true
# check_untyped_defs = true
# incremental = false
strict = true
warn_return_any = false
# warn_redundant_casts = true
# warn_unreachable = true
# warn_unused_configs = true
# warn_unused_ignores = true
disallow_subclassing_any = false
# disallow_any_explicit = true
# disallow_untyped_calls = true
# disallow_untyped_defs = true
# disallow_incomplete_defs = true
# disallow_untyped_decorators = true
# plugins = ["sqlalchemy.ext.mypy.plugin", "pydantic.mypy"]

[tool.ruff]
ignore-init-module-imports = true
indent-width = 4

[tool.taskipy.tasks]
test = { cmd = "python -m pytest -vv", help = "runs all unit tests" }
mypy = { cmd = "mypy src", help = "runs mypy" }
create_migration = { cmd = "docker compose exec drinquepedia_api alembic revision --autogenerate -m", help = "create new migration" }
run_migrations = { cmd = "docker compose exec drinquepedia_api alembic upgrade head", help = "run migrations" }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
